<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>SIGEB - Relatórios</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.23/jspdf.plugin.autotable.min.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore-compat.js"></script>
  <style>
    body { font-family: 'Poppins', sans-serif; background: #f0f2f5; }
    .main-content { margin-left: 250px; padding: 20px; }
    .sidebar {
      position: fixed; top: 0; left: 0; height: 100%; width: 250px;
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
      color: white; padding: 20px; z-index: 1000;
    }
    .sidebar-header { padding: 20px 0; text-align: center; border-bottom: 1px solid rgba(255,255,255,0.1);}
    .sidebar-header h3 { background: linear-gradient(90deg, #00f2fe, #4facfe); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; margin: 0; font-weight: 600;}
    .menu-items { padding: 20px 0; }
    .menu-item { padding: 12px 20px; color: white; text-decoration: none; display: flex; align-items: center; border-radius: 8px; margin-bottom: 5px; }
    .menu-item.active, .menu-item:hover { background: rgba(255,255,255,0.1); color: #4facfe; }
    .menu-item i { margin-right: 10px; font-size: 1.2rem; }
    .report-filters { background: white; border-radius: 15px; box-shadow: 0 2px 10px rgba(0,0,0,0.08); padding: 24px; margin-bottom: 24px; }
    .report-section { background: white; border-radius: 15px; box-shadow: 0 2px 10px rgba(0,0,0,0.08); padding: 24px; }
    .btn-gradient { background: linear-gradient(90deg, #00f2fe, #4facfe); color: white; border: none; }
    @media (max-width: 768px) {
      .sidebar { position: static; width: 100%; }
      .main-content { margin-left: 0; }
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <div class="sidebar-header">
      <h3>SIGEB</h3>
    </div>
    <div class="menu-items">
      <a href="dashboard.html" class="menu-item"><i class='bx bxs-dashboard'></i>Dashboard</a>
      <a href="livros.html" class="menu-item"><i class='bx bxs-book'></i>Livros</a>
      <a href="usuarios.html" class="menu-item"><i class='bx bxs-user'></i>Usuários</a>
      <a href="emprestimos.html" class="menu-item"><i class='bx bxs-bookmark'></i>Empréstimos</a>
      <a href="relatorios.html" class="menu-item active"><i class='bx bxs-report'></i>Relatórios</a>
      <a href="configuracoes.html" class="menu-item"><i class='bx bxs-cog'></i>Configurações</a>
      <a href="index.html" class="menu-item"><i class='bx bxs-log-out'></i>Sair</a>
    </div>
  </div>
  <div class="main-content">
    <h2 class="mb-4">Relatórios</h2>
    <div class="report-filters mb-4">
      <div class="row g-3 align-items-end">
        <div class="col-md-3">
          <label class="form-label">Tipo de Relatório</label>
          <select class="form-select" id="reportType">
            <option value="livros">Livros</option>
            <option value="usuarios">Usuários</option>
            <option value="emprestimos">Empréstimos</option>
          </select>
        </div>
        <div class="col-md-3" id="livrosFilters">
          <label class="form-label">Gênero</label>
          <select class="form-select" id="livrosGenero">
            <option value="">Todos</option>
            <option value="ROMANCE">Romance</option>
            <option value="FICCAO_CIENTIFICA">Ficção Científica</option>
            <option value="FANTASIA">Fantasia</option>
            <option value="MISTERIO">Mistério</option>
            <option value="TERROR">Terror</option>
            <option value="DRAMA">Drama</option>
            <option value="AVENTURA">Aventura</option>
            <option value="BIOGRAFIA">Biografia</option>
            <option value="HISTORIA">História</option>
            <option value="CIENCIAS">Ciências</option>
            <option value="TECNOLOGIA">Tecnologia</option>
            <option value="AUTOAJUDA">Autoajuda</option>
            <option value="EDUCACAO">Educação</option>
            <option value="INFANTIL">Infantil</option>
            <option value="POESIA">Poesia</option>
            <option value="OUTROS">Outros</option>
          </select>
        </div>
        <div class="col-md-3 d-none" id="usuariosFilters">
          <label class="form-label">Status</label>
          <select class="form-select" id="usuariosStatus">
            <option value="">Todos</option>
            <option value="ativo">Ativo</option>
            <option value="inativo">Inativo</option>
          </select>
        </div>
        <div class="col-md-3 d-none" id="emprestimosFilters">
          <label class="form-label">Situação</label>
          <select class="form-select" id="emprestimosSituacao">
            <option value="">Todos</option>
            <option value="ativo">Ativo</option>
            <option value="finalizado">Finalizado</option>
            <option value="atrasado">Atrasado</option>
          </select>
        </div>
        <div class="col-md-3">
          <button class="btn btn-gradient w-100" id="btnGerarRelatorio"><i class='bx bx-printer'></i> Gerar Relatório</button>
        </div>
      </div>
    </div>
    <div class="report-section" id="reportResult">
      <p>Selecione o tipo de relatório e filtros desejados para visualizar e imprimir.</p>
    </div>
  </div>
  <script>
    // Firebase config (ajuste conforme seu projeto)
    const firebaseConfig = {
      apiKey: "AIzaSyCkttFoV_FoPn91ClE7xFiknFvs9pXaCoQ",
      authDomain: "sigeb-ccd3f.firebaseapp.com",
      projectId: "sigeb-ccd3f",
    };
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    // Alternar filtros conforme tipo de relatório
    document.getElementById('reportType').addEventListener('change', function() {
      document.getElementById('livrosFilters').classList.add('d-none');
      document.getElementById('usuariosFilters').classList.add('d-none');
      document.getElementById('emprestimosFilters').classList.add('d-none');
      if (this.value === 'livros') document.getElementById('livrosFilters').classList.remove('d-none');
      if (this.value === 'usuarios') document.getElementById('usuariosFilters').classList.remove('d-none');
      if (this.value === 'emprestimos') document.getElementById('emprestimosFilters').classList.remove('d-none');
    });

    // Gerar relatório ao clicar
    document.getElementById('btnGerarRelatorio').addEventListener('click', async function() {
      const tipo = document.getElementById('reportType').value;
      let html = '';
      if (tipo === 'livros') {
        const genero = document.getElementById('livrosGenero').value;
        let query = db.collection('livros');
        if (genero) query = query.where('generos', 'array-contains', genero);
        const snapshot = await query.get();
        html = `<h5>Relatório de Livros</h5>
        <table class="table table-bordered table-sm mt-3"><thead>
        <tr><th>Título</th><th>Autor(es)</th><th>Editora</th><th>Ano</th><th>Gêneros</th><th>Qtd.</th></tr></thead><tbody>`;
        snapshot.forEach(doc => {
          const d = doc.data();
          html += `<tr>
            <td>${d.titulo || ''}</td>
            <td>${Array.isArray(d.autores) ? d.autores.join(', ') : d.autores || ''}</td>
            <td>${d.editora || ''}</td>
            <td>${d.ano || ''}</td>
            <td>${Array.isArray(d.generos) ? d.generos.join(', ') : d.generos || ''}</td>
            <td>${d.quantidade || ''}</td>
          </tr>`;
        });
        html += '</tbody></table>';
      } else if (tipo === 'usuarios') {
        const status = document.getElementById('usuariosStatus').value;
        let query = db.collection('usuarios');
        if (status) query = query.where('status', '==', status);
        const snapshot = await query.get();
        html = `<h5>Relatório de Usuários</h5>
        <table class="table table-bordered table-sm mt-3"><thead>
        <tr><th>Nome</th><th>Email</th><th>Status</th><th>Data Cadastro</th></tr></thead><tbody>`;
        snapshot.forEach(doc => {
          const d = doc.data();
          html += `<tr>
            <td>${d.nome || ''}</td>
            <td>${d.email || ''}</td>
            <td>${d.status || ''}</td>
            <td>${d.dataCadastro ? new Date(d.dataCadastro.seconds*1000).toLocaleDateString() : ''}</td>
          </tr>`;
        });
        html += '</tbody></table>';
      } else if (tipo === 'emprestimos') {
        const situacao = document.getElementById('emprestimosSituacao').value;
        let query = db.collection('emprestimos');
        if (situacao) query = query.where('situacao', '==', situacao);
        const snapshot = await query.get();
        html = `<h5>Relatório de Empréstimos</h5>
        <table class="table table-bordered table-sm mt-3"><thead>
        <tr><th>Usuário</th><th>Livro</th><th>Data Empréstimo</th><th>Data Devolução</th><th>Situação</th></tr></thead><tbody>`;
        snapshot.forEach(doc => {
          const d = doc.data();
          html += `<tr>
            <td>${d.usuarioNome || ''}</td>
            <td>${d.livroTitulo || ''}</td>
            <td>${d.dataEmprestimo ? new Date(d.dataEmprestimo.seconds*1000).toLocaleDateString() : ''}</td>
            <td>${d.dataDevolucao ? new Date(d.dataDevolucao.seconds*1000).toLocaleDateString() : ''}</td>
            <td>${d.situacao || ''}</td>
          </tr>`;
        });
        html += '</tbody></table>';
      }
      document.getElementById('reportResult').innerHTML = html || '<p>Nenhum dado encontrado.</p>';
    });
  </script>
</body>
</html>
